
######################## TEMPLATE PRĄD ########################

- sensor:
  - name: zasilanie_230v
    state: >
      {% if is_state('binary_sensor.zasilanie_230v_ok', 'on') %}
        Sieć
      {% else %}
        UPS
      {% endif %}
    icon: >
      {% if is_state("binary_sensor.zasilanie_230v_ok", "on") %}
        mdi:transmission-tower
      {% else %}
        mdi:car-battery
      {% endif %}

# SUMA ZUŻYCIA DZIENNEGO BEZ GNIAZDEK POMIAROWYCH
  - name: sum_power_devices_other
    state: "{{ (states('sensor.sum_power_devices_daily')|float(0) -states('sensor.boiler_power')|float(0) -states('sensor.dishwasher_power')|float(0) -states('sensor.fridge_power')|float(0) -states('sensor.washingmachine_power')|float(0) ) |round(0) }}"
    unit_of_measurement: 'W'
  - name: sum_power_devices_other_cost
    state: "{{ ((states('sensor.sum_power_devices_other') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2) )  }}"
    unit_of_measurement: 'zł'

  - name: sum_power_devices_other2
    unit_of_measurement: 'W'
    state: |
          {% if states('sensor.sum_power_devices_other') | float > 0 %}
            {{ states('sensor.sum_power_devices_other') }}
          {% else -%}
            0
          {% endif %}
# SUMA GNIAZDEK STAŁYCH
  - name: sum_power_devices
    state: "{{ (states('sensor.diskstation_powercalc_power')|float(0) +states('sensor.oven_powercalc_power')|float(0) ) |round(0) }}"
    unit_of_measurement: 'W'
  - name: sum_power_devices_cost
    state: "{{ ((states('sensor.sum_power_devices') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2) )  }}"
    unit_of_measurement: 'zł'
      
# SUMA WSZYSTKICH GNIAZDEK DODATKOWYCH
  - name: sum_power_devices_additional
    state: "{{ (states('sensor.laptop_power')|float(0) +states('sensor.biuro_power')|float(0) +states('sensor.attic_powercalc_power')|float(0) ) |round(0) }}"
    unit_of_measurement: 'W'
  - name: sum_power_devices_additional_cost
    state: "{{ (states('sensor.sum_power_devices_additional') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# SUMA WSZYSTKICH GNIAZDEK DODATKOWYCH - DZIENNE UŻYCIE
  - name: sum_power_devices_daily
    state: "{{ (states('sensor.ipower_sum')|float(0) - states('sensor.ups_power')|float(0) - states('sensor.sum_power_devices')|float(0) - states('sensor.sum_power_devices_additional')|float(0)) |round(0) }}"
    unit_of_measurement: 'W'
  - name: sum_power_devices_daily_cost
    state: "{{ (states('sensor.sum_power_devices_daily') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2) }}"
    unit_of_measurement: 'zł'

#UPS
  - name: ups_power
    state: >
      {% if is_state('binary_sensor.zasilanie_230v_ok', 'on') %}
        {{ states('sensor.mainpowersocketups_power') |float(0) |round(0) }}
      {% else %}
        0
      {% endif %}
    unit_of_measurement: 'W'
  - name: ups_current
    state: "{{ states('sensor.mainpowersocketups_current') |float(0) }}"
    unit_of_measurement: 'A'
  - name: ups_energy
    state: "{{ states('sensor.mainpowersocketups_energy') |float(0) }}"
    unit_of_measurement: 'kWh'
  - name: ups_czas_dzialania
    state: "{{ (states('sensor.ups_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: ups_cost
    state: "{{ (states('sensor.ups_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'
  - name: ups_cost_day
    state: "{{ ((states('sensor.ups_time_on')|float(0)*2/1000)*states('sensor.cena_pradu')|float(0))|round(2) }}"
    unit_of_measurement: zł/doba

 #PLC
  - name: plc_czas_dzialania
    state: "{{ (states('sensor.plc_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: plc_cost
    state: "{{ (states('sensor.plc_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# Hp G3 EliteDesk
  - name: hp_elitedesk_g3_czas_dzialania
    state: "{{ (states('sensor.hp_elitedesk_g3_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: hp_elitedesk_g3_cost
    state: "{{ (states('sensor.hp_elitedesk_g3_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'
 
 # GNIAZDKO MONITOR 
  - name: monitor_czas_dzialania
    state: "{{ (states('sensor.monitor_hmi_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: monitor_cost
    state: "{{ ( states('sensor.monitor_hmi_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: zł

# SWITCH POE
  - name: switch_poe_czas_dzialania
    state: "{{ (states('sensor.switch_poe_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: switch_poe_cost
    state: "{{ (states('sensor.switch_poe_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# SWITCHES
  - name: switches_czas_dzialania
    state: "{{ (states('sensor.switches_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: switches_cost
    state: "{{ (states('sensor.switches_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# ROUTER
  - name: router_czas_dzialania
    state: "{{ (states('sensor.router_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: router_cost
    state: "{{ (states('sensor.router_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# SWITCH OD GBN
  - name: switch_gbn_czas_dzialania
    state: "{{ (states('sensor.gbn_switch_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: switch_gbn_cost
    state: "{{ (states('sensor.switch_gbn_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# ZASILACZ 24V
  - name: zasilacz_24_czas_dzialania
    state: "{{ (states('sensor.zasilacz_24_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: zasilacz_24_cost
    state: "{{ (states('sensor.zasilacz_24_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

 # GNIAZDKO LAPTOPA 
  - name: laptop_power
    state: "{{ states('sensor.officelaptop_power') |float(0) |round(0) }}"
    unit_of_measurement: 'W'
  - name: laptop_current
    state: "{{ states('sensor.officelaptop_current') |float(0) }}"
    unit_of_measurement: 'A'
  - name: laptop_energy
    state: "{{ states('sensor.officelaptop_energy') |float(0) }}"
    unit_of_measurement: 'kWh'
  - name: laptop_czas_dzialania
    state: "{{ (states('sensor.laptop_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: laptop_cost
    state: "{{ ( states('sensor.officelaptop_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: zł/h

# GNIAZDKA BIURO
  - name: biuro_power
    state: "{{ states('sensor.office_power') |float(0) |round(0) }}"
    unit_of_measurement: 'W'
  - name: biuro_current
    state: "{{ states('sensor.office_current') |float(0) }}"
    unit_of_measurement: 'A'
  - name: biuro_energy
    state: "{{ states('sensor.office_energy') |float(0) }}"
    unit_of_measurement: 'kWh'
  - name: biuro_czas_dzialania
    state: "{{ (states('sensor.biuro_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: biuro_cost
    state: "{{ ( states('sensor.biuro_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: zł/h

 # ZMYWARKA
  - name: zmywarka_power
    state: "{{ states('sensor.dishwasher_power') |float(0) |round(0) }}"
    unit_of_measurement: 'W'
  - name: zmywarka_current
    state: "{{ states('sensor.dishwasher_current') |float(0) }}"
    unit_of_measurement: 'A'
  - name: zmywarka_energy
    state: "{{ states('sensor.dishwasher_energy') |float(0) }}"
    unit_of_measurement: 'kWh'
  - name: zmywarka_czas_dzialania
    state: "{{ (states('sensor.dishwasher_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: zmywarka_cost
    state: "{{ ( states('sensor.dishwasher_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: zł
  - name: zmywarka_cost_all
    state: "{{ (states('sensor.dishwasher_energy') |float(0) *  states('sensor.cena_pradu') |float(0)) |round(2)  }}"
    unit_of_measurement: zł

# GNIAZDKA PRALKA
  - name: washing_machine_power
    state: "{{ states('sensor.washingmachine_power') |float(0) |round(0) }}"
    unit_of_measurement: 'W'
  - name: washing_machine_current
    state: "{{ states('sensor.washingmachine_current') |float(0) }}"
    unit_of_measurement: 'A'
  - name: washing_machine_energy
    state: "{{ states('sensor.washingmachine_energy') |float(0) }}"
    unit_of_measurement: 'kWh'
  - name: washing_machine_czas_dzialania
    state: "{{ (states('sensor.washing_machine_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: washing_machine_cost
    state: "{{ (states('sensor.washingmachine_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'
  - name: washing_machine_cost_all
    state: "{{ (states('sensor.washingmachine_energy') |float(0) *  states('sensor.cena_pradu') |float(0)) |round(2)  }}"
    unit_of_measurement: zł

# DISKSTATION
  - name: diskstation_czas_dzialania
    state: "{{ (states('sensor.diskstation_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: diskstation_cost
    state: "{{ (states('sensor.diskstation_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# PIEKARNIK - OVEN
  - name: oven_czas_dzialania
    state: "{{ (states('sensor.oven_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: oven_cost
    state: "{{ (states('sensor.oven_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'
 
# ODKURZACZ ROBOROCK
  - name: roborock_czas_dzialania
    state: "{{ (states('sensor.roborock_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: roborock_cost
    state: "{{ (states('sensor.roborock_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# STRYCH, WZMACNIACZ ANTENOWY, KAMERA PIĘTRO
  - name: attic_czas_dzialania
    state: "{{ (states('sensor.attic_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: attic_cost
    state: "{{ (states('sensor.attic_powercalc_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# URZĄDZENIA UPS BEZ PLC
  - name: ups_plus_power
    state:  "{{ (states('sensor.ups_power')|float(0) - states('sensor.plc_powercalc_power')|float(0) - states('sensor.hp_elitedesk_g3_powercalc_power')|float(0) - states('sensor.switch_poe_powercalc_power')|float(0) - states('sensor.switches_powercalc_power')|float(0) - states('sensor.router_powercalc_power')|float(0) - states('sensor.switch_gbn_powercalc_power')|float(0) - states('sensor.monitor_hmi_powercalc_power')|float(0)) |round(0) }}"
    unit_of_measurement: 'W'
  - name: ups_plus_cost
    state: "{{ (states('sensor.ups_plus_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'

# LODÓWKA
  - name: fridge_czas_dzialania
    state: "{{ (states('sensor.fridge_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: fridge_cost
    state: "{{ (states('sensor.fridge_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'
  - name: fridge_cost_all
    state: "{{ (states('sensor.fridge_energy') |float(0) *  states('sensor.cena_pradu') |float(0)) |round(2)  }}"
    unit_of_measurement: zł

# PIEC CO
  - name: boiler_czas_dzialania
    state: "{{ (states('sensor.boiler_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"
  - name: boiler_cost
    state: "{{ (states('sensor.boiler_power') |float(0)/1000 * states('sensor.cena_pradu')|float(0)) |round(2)}}"
    unit_of_measurement: 'zł'
  - name: boiler_cost_all
    state: "{{ (states('sensor.boiler_energy') |float(0) *  states('sensor.cena_pradu') |float(0)) |round(2)  }}"
    unit_of_measurement: zł

# ZANIK PRĄDU
  - name: no_power_time_on_formated
    state: "{{ (states('sensor.no_power_time_on') | float(0) * 3600) | timestamp_custom('%H:%M:%S', false) }}"

# ZAMIANA Z FLOAT NA INT ZAOKRĄGLENIA ROUND
  - name: diskstation powercalc round
    state: "{{ states('sensor.diskstation_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: attic powercalc round
    state: "{{ states('sensor.attic_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: roborock powercalc round
    state: "{{ states('sensor.roborock_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: monitor_hmi powercalc round
    state: "{{ states('sensor.monitor_hmi_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: switch_gbn powercalc round
    state: "{{ states('sensor.switch_gbn_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: router powercalc round
    state: "{{ states('sensor.router_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: switches powercalc round
    state: "{{ states('sensor.switches_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: switch_poe powercalc round
    state: "{{ states('sensor.switch_poe_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: oven powercalc round
    state: "{{ states('sensor.oven_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: hp_elitedesk_g3 powercalc round
    state: "{{ states('sensor.hp_elitedesk_g3_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: plc powercalc round
    state: "{{ states('sensor.plc_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
  - name: zasilacz_24 powercalc round
    state: "{{ states('sensor.zasilacz_24_powercalc_power') |int(0) }}"
    unit_of_measurement: 'W'
    